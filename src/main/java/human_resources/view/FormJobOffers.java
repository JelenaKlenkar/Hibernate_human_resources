/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package human_resources.view;

import com.toedter.calendar.JDateChooser;
import human_resources.controller.ProcessingJobApplication;
import human_resources.controller.ProcessingJobOffer;
import human_resources.model.JobApplication;
import human_resources.model.JobOffer;
import human_resources.utility.JelenaException;
import human_resources.utility.Utility;
import java.math.BigDecimal;
import java.time.LocalDate;
import static java.time.LocalDate.now;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.hibernate.type.descriptor.java.LocalDateJavaDescriptor;

/**
 *
 * @author Jelena
 */
public class FormJobOffers extends JelenaView<JobOffer> {

    /**
     * Creates new form FormJobOffer
     */
    private ProcessingJobOffer processing;

    public FormJobOffers() {
        initComponents();
        processing = new ProcessingJobOffer();
        setTitle(Utility.getNameOfApplication() + " Job offers");
        JDateChooser dateChooser = new JDateChooser();
        dateChooser.setLocale(Locale.ENGLISH);
        dateChooser.setDateFormatString("dd.MM.yyyy");
        LocalDate now = LocalDate.now();
        dcStartingDate.setDate(Utility.convertToDateViaInstant(now));
        btnSearch.setText("\uD83D\uDD0D");

        loadJobApplications();
        load();

    }

    protected void load() {
        DefaultListModel<JobOffer> model = new DefaultListModel<>();
        processing.getEntitys(txtCondition.getText().trim()).forEach(
                (jobOffer) -> {
                    model.addElement(jobOffer);
                });
        List.setModel(model);
        List.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblSalary = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        lblStartingDate = new javax.swing.JLabel();
        dcStartingDate = new com.toedter.calendar.JDateChooser();
        chbAccept = new javax.swing.JCheckBox();
        chbNotAccept = new javax.swing.JCheckBox();
        lblJobApplication = new javax.swing.JLabel();
        cmbJobApplications = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        List = new javax.swing.JList<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtCondition = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 2, 14))); // NOI18N

        lblSalary.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblSalary.setText("Salary:");

        txtSalary.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N

        lblStartingDate.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblStartingDate.setText("Starting date:");

        dcStartingDate.setDateFormatString("dd.MM.yyyy.");
        dcStartingDate.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N

        chbAccept.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        chbAccept.setText("Accept");

        chbNotAccept.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        chbNotAccept.setText("Not accept");

        lblJobApplication.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblJobApplication.setText("Job application: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStartingDate)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(chbAccept)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(chbNotAccept)
                                .addGap(0, 60, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(dcStartingDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblJobApplication)
                            .addComponent(lblSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSalary)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbJobApplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJobApplication)
                    .addComponent(cmbJobApplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(dcStartingDate, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                    .addComponent(lblStartingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbAccept)
                    .addComponent(chbNotAccept))
                .addGap(17, 17, 17))
        );

        List.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(List);

        btnAdd.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtCondition.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSearch.setText("S");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        JobOffer jo = new JobOffer();

        if (dcStartingDate.getDate() != null) {

            Date d = dcStartingDate.getDate();
            jo.setStartingDate(d);

        }

        save(jo);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        JobOffer jo = List.getSelectedValue();
        if (jo == null) {
            JOptionPane.showMessageDialog(null, "First choose item");
            return;
        }
        save(jo);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        JobOffer jo = List.getSelectedValue();
        if (jo == null) {
            JOptionPane.showMessageDialog(null, "First choose item");
            return;
        }
        if (JOptionPane.showConfirmDialog(
                null,
                "Safe to delete" + " " + jo.getSalary() + " " + jo.getSalary(),
                "Delete joboffer",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE)
                == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            processing.delete(jo);
        } catch (JelenaException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return;
        }

        load();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void ListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        JobOffer jo = List.getSelectedValue();
        if (jo == null) {
            return;
        }
        setValues(jo);
    }//GEN-LAST:event_ListValueChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtCondition.getText().trim().length() < 1) {
            JOptionPane.showMessageDialog(null, "Minimum 1 characters");
            return;
        }
        load();
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<JobOffer> List;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chbAccept;
    private javax.swing.JCheckBox chbNotAccept;
    private javax.swing.JComboBox<JobApplication> cmbJobApplications;
    private com.toedter.calendar.JDateChooser dcStartingDate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJobApplication;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblStartingDate;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void save(JobOffer jo) {
        if (!control(jo)) {
            return;

        }
        jo.setJobApplications((JobApplication) cmbJobApplications.getSelectedItem());
        jo.setSalary(new BigDecimal(txtSalary.getText()));
        jo.setAccept(chbAccept.isSelected());
        try {
            processing.save(jo);
        } catch (JelenaException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return;
        }

        load();
    }

    @Override
    protected boolean control(JobOffer jo) {
        return controlSalary(jo)
                && controlStartingDate(jo)
                && controlAccept(jo);
    }

    @Override
    protected void setValues(JobOffer jo) {
        cmbJobApplications.setSelectedItem(jo.getJobApplications());
        txtSalary.setText(jo.getSalary() == null ? ""
                : jo.getSalary().toString());
        dcStartingDate.setDate(jo.getStartingDate());

        chbAccept.setSelected(jo.isAccept());
        chbNotAccept.setSelected(!jo.isAccept());
    }

    private boolean controlSalary(JobOffer jo) {
        if (txtSalary.getText().trim().length() > 0) {
            try {
                jo.setSalary(new BigDecimal(txtSalary.getText()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Salary needs to be number");
                return false;
            }
        }
        if (txtSalary.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Salary is mandatory");
            return false;
        }

        return true;
    }

    private boolean controlStartingDate(JobOffer jo) {
        if (dcStartingDate.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Selection of starting date is mandatory");
            return false;
        }
        jo.setStartingDate(jo.getStartingDate());
        return true;
    }

    private boolean controlAccept(JobOffer jo) {
        if (!chbAccept.isSelected() && !chbNotAccept.isSelected()) {
            JOptionPane.showMessageDialog(null, "Accept or Not accept needs to be selected");
            return false;
        }
        if (chbAccept.isSelected() && chbNotAccept.isSelected()) {
            JOptionPane.showMessageDialog(null, "You need to select only one");
            return false;
        }

        return true;
    }

    private void loadJobApplications() {
        DefaultComboBoxModel<JobApplication> m = new DefaultComboBoxModel<>();
        JobApplication ja = new JobApplication();
        ja.setId(0);
        ja.setNumberOfApplication(Integer.parseInt("0"));

        m.addElement(ja);

        new ProcessingJobApplication().getEntitys().forEach((jobApplication) -> {
            m.addElement(jobApplication);
        });
        cmbJobApplications.setModel(m);

    }
}
