/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package human_resources.view;

import com.toedter.calendar.JDateChooser;
import human_resources.controller.ProcessingInterview;
import human_resources.controller.ProcessingJobApplication;
import human_resources.model.Interview;
import human_resources.model.JobApplication;
import human_resources.utility.JelenaException;
import human_resources.utility.Utility;
import java.time.LocalDate;
import static java.time.LocalDate.now;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Jelena
 */
public class FormInterviews extends JelenaView<Interview> {

    /**
     * Creates new form FormInterview
     */
    private ProcessingInterview processing;

    public FormInterviews() {
        initComponents();
        processing = new ProcessingInterview();
        setTitle(Utility.getNameOfApplication() + " Interviews");
        JDateChooser dateChooser = new JDateChooser();
        dateChooser.setLocale(Locale.ENGLISH);
        dateChooser.setDateFormatString("dd.MM.yyyy");
        LocalDate now = LocalDate.now();
        dcDateOfInterview.setDate(Utility.convertToDateViaInstant(now));
        btnSearch.setText("\uD83D\uDD0D");
        btnHelp.setText("\u2753");
        loadJobApplications();
        load();
    }

    protected void load() {
        DefaultListModel<Interview> model = new DefaultListModel<>();
        processing.getEntitys(txtCondition.getText().trim()).forEach(
                (interview) -> {
                    model.addElement(interview);
                });
        List.setModel(model);
        List.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTypeOfInterview = new javax.swing.JLabel();
        txtTypeOfInterview = new javax.swing.JTextField();
        lblDateOfInterview = new javax.swing.JLabel();
        dcDateOfInterview = new com.toedter.calendar.JDateChooser();
        lblNumberOfInterview = new javax.swing.JLabel();
        jsNumberOfInterview = new javax.swing.JSpinner();
        lblJobApplication = new javax.swing.JLabel();
        cmbJobApplications = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        List = new javax.swing.JList<>();
        btnSearch = new javax.swing.JButton();
        txtCondition = new javax.swing.JTextField();
        btnHelp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 350));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 2, 12))); // NOI18N

        lblTypeOfInterview.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblTypeOfInterview.setText("Type of interview:");

        txtTypeOfInterview.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N

        lblDateOfInterview.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblDateOfInterview.setText("Date of interview:");

        dcDateOfInterview.setDateFormatString("dd.MM.yyyy.");
        dcDateOfInterview.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        dcDateOfInterview.setMaxSelectableDate(new java.util.Date(253370764907000L));
        dcDateOfInterview.setMinSelectableDate(new java.util.Date(-62135769493000L));

        lblNumberOfInterview.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblNumberOfInterview.setText("NumberOfInterview:");

        jsNumberOfInterview.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));

        lblJobApplication.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblJobApplication.setText("Job application: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNumberOfInterview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsNumberOfInterview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDateOfInterview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcDateOfInterview, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTypeOfInterview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTypeOfInterview, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblJobApplication)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbJobApplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJobApplication)
                    .addComponent(cmbJobApplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTypeOfInterview)
                    .addComponent(txtTypeOfInterview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblDateOfInterview))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcDateOfInterview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumberOfInterview)
                    .addComponent(jsNumberOfInterview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        btnAdd.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        List.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        List.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        List.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(List);

        btnSearch.setText("S");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnHelp.setText("h");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnAdd)
                        .addGap(26, 26, 26)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnHelp, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCondition))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHelp)
                        .addGap(22, 22, 22))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Interview i = new Interview();

        if (dcDateOfInterview != null) {

            Date d = dcDateOfInterview.getDate();
            i.setDateOfInterview(d);
        }

        save(i);
    }//GEN-LAST:event_btnAddActionPerformed

    private void ListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        Interview i = List.getSelectedValue();
        if (i == null) {
            return;
        }
        setValues(i);

    }//GEN-LAST:event_ListValueChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtCondition.getText().trim().length() < 1) {
            JOptionPane.showMessageDialog(null, "Minimum 1 characters");
            return;
        }
        load();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Interview i = List.getSelectedValue();
        if (i == null) {
            JOptionPane.showMessageDialog(null, "First choose item");
            return;
        }
        if (JOptionPane.showConfirmDialog(
                null,
                "Safe to delete" + " " + i.getTypeOfInterview(),
                "Delete interview",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE)
                == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            processing.delete(i);
        } catch (JelenaException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return;
        }

        load();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Interview i = List.getSelectedValue();
        if (i == null) {
            JOptionPane.showMessageDialog(null, "First choose item");
            return;
        }
        save(i);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null, "1. Job application combo box-select number of job application of applicant"
                + "\n2. Type of interview - enter type of interview for selected number of application"
                + "\n3. Date of interview - select date of interview when interview was held"
                + "\n4. Number of interview - select number of interview of selected number of application"
                + "\n**Add button - Adds new entry to database"
                + "\n**Update button - Updates selected database entry with new values"
                + "\n**Delete button - Removes selected entry from database", "Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnHelpActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Interview> List;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<JobApplication> cmbJobApplications;
    private com.toedter.calendar.JDateChooser dcDateOfInterview;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jsNumberOfInterview;
    private javax.swing.JLabel lblDateOfInterview;
    private javax.swing.JLabel lblJobApplication;
    private javax.swing.JLabel lblNumberOfInterview;
    private javax.swing.JLabel lblTypeOfInterview;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtTypeOfInterview;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void save(Interview i) {
        if (!control(i)) {
            return;

        }
        i.setJobApplication((JobApplication) cmbJobApplications.getSelectedItem());

        try {
            processing.save(i);
        } catch (JelenaException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return;
        }

        load();
    }

    @Override
    protected boolean control(Interview i) {
        return controlTypeOfInterview(i)
                && controlDateOfInterview(i)
                && controlNumberOfInterview(i);

    }

    @Override
    protected void setValues(Interview i) {
        cmbJobApplications.setSelectedItem(i.getJobApplication());
        txtTypeOfInterview.setText(i.getTypeOfInterview() == null ? "" : i.getTypeOfInterview());
        dcDateOfInterview.setDate(i.getDateOfInterview());
        jsNumberOfInterview.setValue(i.getNumberOfInterview());

    }

    private boolean controlTypeOfInterview(Interview i) {
        if (txtTypeOfInterview.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Type of interview is mandatory");
            return false;
        }
        i.setTypeOfInterview(txtTypeOfInterview.getText());
        return true;
    }

    private boolean controlDateOfInterview(Interview i) {
        if (dcDateOfInterview.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Selection of date of interview is mandatory");
            return false;
        }
        i.setDateOfInterview(dcDateOfInterview.getDate());
        return true;
    }

    private boolean controlNumberOfInterview(Interview i) {
        /* if(jsNumberOfInterview.getValue()==0){
         JOptionPane.showMessageDialog(null,"You need to select number of interview");
           return false; 
        }*/
        i.setNumberOfInterview((Integer) jsNumberOfInterview.getValue());

        return true;
    }

    private void loadJobApplications() {
        DefaultComboBoxModel<JobApplication> m = new DefaultComboBoxModel<>();
        JobApplication ja = new JobApplication();
        ja.setId(0);
        ja.setNumberOfApplication(Integer.parseInt("0"));

        m.addElement(ja);

        new ProcessingJobApplication().getEntitys().forEach((jobApplication) -> {
            m.addElement(jobApplication);
        });
        cmbJobApplications.setModel(m);

    }

}
